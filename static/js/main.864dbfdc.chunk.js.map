{"version":3,"sources":["api.ts","pages/HomePage.tsx","components/Loader/Loader.tsx","components/Loader/PersonLink.tsx","components/Loader/PeopleTable.tsx","pages/PeoplePage.tsx","pages/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","HomePage","className","Loader","PersonLink","person","to","slug","cn","sex","name","PeopleTable","people","personSlug","isSelected","map","title","born","died","mother","motherName","father","fatherName","PeoplePage","useParams","length","NotFoundPage","App","useState","setPeople","getPeopleFromServer","dataFromServer","peopleWithParents","find","p","useEffect","role","isActive","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.864dbfdc.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport cn from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={`/people/${person.slug}`}\n      className={cn({ 'has-text-danger': person.sex === 'f' })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","/* eslint-disable no-prototype-builtins */\nimport React from 'react';\nimport cn from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  people: Person[];\n  personSlug: string;\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people, personSlug }) => {\n  const isSelected = (person: Person) => person.slug === personSlug;\n  const headTitles = ['Name', 'Sex', 'Born', 'Died', 'Mother', 'Father'];\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {headTitles.map(title => (\n            <th>{ title }</th>\n          ))}\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            data-cy=\"person\"\n            key={person.slug}\n            className={cn(\n              { 'has-background-warning': isSelected(person) },\n            )}\n          >\n            <td>\n              <PersonLink person={person} />\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born }</td>\n            <td>{person.died}</td>\n            <td>\n              {person.mother\n                ? <PersonLink person={person.mother} />\n                : person.motherName || '-'}\n            </td>\n            <td>\n              {person.father\n                ? <PersonLink person={person.father} />\n                : person.fatherName || '-'}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/Loader/PeopleTable';\nimport { Person } from '../types';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeoplePage: React.FC<Props> = ({ people }) => {\n  const { personSlug = '' } = useParams();\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {people.length === 0 && (\n            <Loader />\n          )}\n\n          {!people && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          <PeopleTable\n            people={people}\n            personSlug={personSlug}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-unused-expressions */\nimport { useEffect, useState } from 'react';\nimport {\n  Navigate, NavLink, Route, Routes,\n} from 'react-router-dom';\nimport cn from 'classnames';\nimport { getPeople } from './api';\n\nimport './App.scss';\nimport { Person } from './types/Person';\n\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nexport const App = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n\n  const getPeopleFromServer = async () => {\n    try {\n      const dataFromServer = await getPeople();\n\n      const peopleWithParents = dataFromServer.map((person: Person) => {\n        return {\n          ...person,\n          mother: dataFromServer.find(\n            (p: Person) => p.name === person.motherName,\n          ),\n          father: dataFromServer.find(\n            (p: Person) => p.name === person.fatherName,\n          ),\n        };\n      });\n\n      setPeople(peopleWithParents);\n    } catch {\n      (\n        <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n          Something went wrong\n        </p>\n      );\n    }\n  };\n\n  useEffect(() => {\n    getPeopleFromServer();\n  }, []);\n\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              className={({ isActive }) => cn('navbar-item ',\n                { 'has-background-grey-lighter': isActive })}\n              to=\"/\"\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              className={({ isActive }) => cn('navbar-item ',\n                { 'has-background-grey-lighter': isActive })}\n              to=\"/people\"\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route\n              path=\"/\"\n              element={<HomePage />}\n            />\n            <Route\n              path=\"home\"\n              element={<Navigate to=\"/\" replace />}\n            />\n\n            <Route path=\"/people\">\n              <Route\n                index\n                element={<PeoplePage people={people} />}\n              />\n              <Route\n                path=\":personSlug\"\n                element={<PeoplePage people={people} />}\n              />\n            </Route>\n\n            <Route\n              path=\"*\"\n              element={<NotFoundPage />}\n            />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}